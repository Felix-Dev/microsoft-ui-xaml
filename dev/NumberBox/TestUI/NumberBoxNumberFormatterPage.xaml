<local:TestPage
    x:Class="MUXControlsTestApp.NumberBoxNumberFormatterPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:MUXControlsTestApp"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:contract7Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
    <local:TestPage.Resources>
        <!-- A XAML markup example for assigning a HexFormatter instance with a list of input prefixes.
        It is currently not used but you can always assign it to one of the NumberBox's below, like the "TestNumberBox". -->
        <muxc:HexadecimalFormatter x:Key="HexFormatter"
                                   OutputPrefix="#"
                                   MinDigits="8">
            <muxc:HexadecimalFormatter.InputPrefixes>
                <x:String>#</x:String>
                <x:String>0x</x:String>
            </muxc:HexadecimalFormatter.InputPrefixes>
        </muxc:HexadecimalFormatter>
    </local:TestPage.Resources>

    <ScrollViewer HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto">
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <muxc:NumberBox x:Name="NumberFormatterTestNumberBox"
                            AcceptsExpression="{x:Bind (x:Boolean)AcceptsExpressionCheckBox.IsChecked, Mode=OneWay}"
                            Header="NumberFormatterTest"
                            Value="0"
                            SpinButtonPlacementMode="Inline"
                            MinWidth="300"/>

            <TextBlock Text="Configuration" Margin="0,20,0,0" Style="{StaticResource TitleTextBlockStyle}" />

            <ComboBox x:Name="NumeralSystemModeComboBox"
                  Header="Numeral System Mode"
                  Margin="0,10,0,0"
                  SelectedIndex="-1">
                <x:String>Decimal (default)</x:String>
                <x:String>Hexadecimal</x:String>
            </ComboBox>

            <!-- Input configurations -->
            <TextBlock Text="Input" Style="{StaticResource SubtitleTextBlockStyle}"
                       Margin="0,15,0,10" />

            <CheckBox x:Name="AcceptsExpressionCheckBox"
                      Content="Accepts Expression"
                      Margin="0,0,0,0"/>

            <TextBox x:Name="InputPrefixesTextBox"
                     Header="Input prefixes"
                     LostFocus="InputPrefixesTextBox_LostFocus"
                     Margin="0,10,0,0"/>

            <muxc:NumberBox x:Name="MinDigitsNumberBox"
                            Header="Minimum number of Digits"
                            Value="1"
                            SpinButtonPlacementMode="Inline"
                            Minimum="1" Maximum="16"
                            Margin="0,10,0,0"
                            ValueChanged="MinDigitsNumberBox_ValueChanged" />

            <!-- Output configurations -->
            <TextBlock Text="Output" Style="{StaticResource SubtitleTextBlockStyle}"
                        Margin="0,15,0,10" />

            <CheckBox x:Name="IsGroupedCheckBox" Content="Is Grouped"
                      IsChecked="False"
                      Checked="IsGroupedCheckBox_Checked"
                      Unchecked="IsGroupedCheckBox_Unchecked"
                      Margin="0,0,0,0"/>

            <TextBox x:Name="OutputPrefixTextBox"
                     Header="Output prefix (*)"
                     contract7Present:Description="(*) The output prefix will automatically be added to the list of input prefixes."
                     Margin="0,10,0,0"
                     LostFocus="OutputPrefixTextBox_LostFocus"/>
        </StackPanel>
    </ScrollViewer>
</local:TestPage>
